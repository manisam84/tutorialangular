
Interpolation
Property binding
event binding
two way binding
https://developer.mozilla.org/en-US/docs/Web/Events\
inteface : strong typing support

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter

http://rxmarbles.com/
https://stackoverflow.com/questions/37123514/read-html-file-into-template-in-angular-2/37127142
https://stackoverflow.com/questions/31692416/dynamic-template-urls-in-angular-2

============
import { Component } from '@angular/core';

@Component({
  selector: 'my-app',
  template: `
  <select [(ngModel)]="selectedDay" (change)="toggleshow()" >
  <option 
  *ngFor='let day of days; let i = index'
  [attr.data-index]="i"
  [ngValue]="i">
    {{ day.today }}
  </option>
</select>
<br><br>
<button (click)="toggleshow()">Display</button>
<h2 >{{message}}</h2>
`
  
})
export class AppComponent {
  //Define your variables show,message,selectedDay,selectedValue,days
  //Define your constructor here with selectedDay as 0

show:boolean;
message:string;
selectedDay:number;
selectedValue:string;
days=[{"today":"Monday","msg":"Marvelous Mondays!"},{"today":"Tuesday","msg":"Thrilling Tuesdays!"},
      {"today":"Wednesday","msg":"Wonderful Wednesdays!"},{"today":"Thursday","msg":"Trendy Thursdays!"},
      {"today":"Friday","msg":"Fantastic Fridays!"},{"today":"Saturday","msg":"Super Saturdays!"},
      {"today":"Sunday","msg":"Sunny Sundays!"}
      ];

constructor(){
    this.selectedDay =0;
    this.show=true;
       this.message=this.days[this.selectedDay].msg;
}
toggleshow():void{ 

          this.show=!this.show;
    
    if(this.show === true)
    {

    this.message=this.days[this.selectedDay].msg;
     
    }
}
}
